package ${package}.${moduleName}.controller;

import java.util.Arrays;
##import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;
import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;
import com.common.enums.ResultResponseEnum;
import com.common.utils.PageUtils;
import com.common.utils.ResultResponse;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;



/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${pathName}")
@Api(tags = "${comments}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @GetMapping("/list")
##    @RequiresPermissions("${moduleName}:${pathName}:list")
    @ApiOperation(value = "${comments}列表")
    @ApiImplicitParams({
            @ApiImplicitParam(paramType = "query", dataType = "int", name = "pageNo", defaultValue = "1", value = "页码"),
            @ApiImplicitParam(paramType = "query", dataType = "int", name = "pageSize", defaultValue = "10", value = "每页条数")
    })
    public PageUtils<Object> list(@RequestParam Integer pageNo, @RequestParam Integer pageSize){
        PageHelper.startPage(pageNo,pageSize,true);
        PageInfo pageInfo = new PageInfo(${classname}Service.list());
        return new PageUtils(pageInfo.getList(),pageInfo.getTotal(),pageSize,pageNo);
    }


    /**
     * 信息
     */
    @GetMapping("/info/{${pk.attrname}}")
##    @RequiresPermissions("${moduleName}:${pathName}:info")
    @ApiOperation(value = "${comments}信息")
    public ${className}Entity info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
        ${className}Entity ${classname} = ${classname}Service.getById(${pk.attrname});

        return ${classname};
    }

    /**
     * 保存
     */
    @PostMapping("/save")
##    @RequiresPermissions("${moduleName}:${pathName}:save")
    @ApiOperation(value = "${comments}新增保存")
    public ResultResponse save(@RequestBody ${className}Entity ${classname}){
        ${classname}Service.save(${classname});

        return new ResultResponse(ResultResponseEnum.SUCCESS.getCode(),null);
    }

    /**
     * 修改
     */
    @PutMapping("/update")
##    @RequiresPermissions("${moduleName}:${pathName}:update")
    @ApiOperation(value = "${comments}修改")
    public ResultResponse update(@RequestBody ${className}Entity ${classname}){
        ${classname}Service.updateById(${classname});

        return new ResultResponse(ResultResponseEnum.SUCCESS.getCode(),null);
    }

    /**
     * 删除
     */
    @DeleteMapping("/delete")
##    @RequiresPermissions("${moduleName}:${pathName}:delete")
    @ApiOperation(value = "${comments}删除")
    public ResultResponse delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
        ${classname}Service.removeByIds(Arrays.asList(${pk.attrname}s));

        return new ResultResponse(ResultResponseEnum.SUCCESS.getCode(),null);
    }

}
